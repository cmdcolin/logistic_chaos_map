{"version":3,"sources":["drawCanvas.js","App.js","index.js"],"names":["drawCanvas","ctx","width","height","minR","maxR","minX","maxX","resolution","vertical","rstep","warmup","Math","pow","log","x","r","pointsDrawn","p","random","i","max","xp","y","fillRect","timeout","ms","Promise","resolve","setTimeout","App","useState","draw","setDraw","mouseover","setMouseover","useQueryParams","withDefault","NumberParam","opacity","StringParam","animate","BooleanParam","drawWithWasm","params","setParams","mouseDown","setMouseDown","mouseCurr","setMouseCurr","loading","setLoading","wasm","setWasm","proportion","setProportion","forceUpdate","setTick","useCallback","tick","useForceUpdate","useEffect","a","console","error","cancelled","Number","isNaN","getContext","getBoundingClientRect","scale","fillStyle","iter","clearRect","x1","y1","x2","y2","style","margin","href","className","htmlFor","id","type","value","onChange","event","target","checked","disabled","toPrecision","onClick","toBlob","blob","saveAs","Date","now","position","ref","background","left","top","zIndex","onMouseDown","nativeEvent","offsetX","offsetY","onMouseMove","onMouseLeave","onMouseUp","min","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a15ad92.chunk.js","sourcesContent":["export default function* drawCanvas(\n  ctx,\n  width,\n  height,\n  minR,\n  maxR,\n  minX,\n  maxX,\n  resolution,\n  vertical\n) {\n  const rstep = (maxR - minR) / width;\n  const warmup = Math.pow(1.5, Math.log(1 / (maxR - minR))) * 1000;\n  for (let x = 0; x < width; x++) {\n    yield x + 1;\n    const r = x * rstep + minR;\n    for (let pointsDrawn = 0; pointsDrawn < resolution; ) {\n      let p = Math.random();\n      for (let i = 0; i < Math.max(warmup, 10000); i++) {\n        p = r * p * (1 - p);\n      }\n\n      if (vertical) {\n        for (let i = 0; i < 500; i++) {\n          const y = width * ((p - minX) / (maxX - minX));\n          const xp = height * ((r - minR) / (maxR - minR));\n          if (y > 0 && y < width) {\n            ctx.fillRect(y, xp, 0.7, 0.7);\n            pointsDrawn++;\n          }\n          p = r * p * (1 - p);\n        }\n      } else {\n        for (let i = 0; i < 500; i++) {\n          const y = height * ((p - minX) / (maxX - minX));\n          const xp = width * ((r - minR) / (maxR - minR));\n          if (y > 0 && y < height) {\n            ctx.fillRect(xp, y, 0.7, 0.7);\n            pointsDrawn++;\n          }\n          p = r * p * (1 - p);\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport \"./App.css\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  BooleanParam,\n  NumberParam,\n  StringParam,\n  useQueryParams,\n  withDefault,\n} from \"use-query-params\";\nimport drawCanvas from \"./drawCanvas\";\nimport saveAs from \"file-saver\";\n\nfunction timeout(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick((tick) => tick + 1);\n  }, []);\n  return update;\n}\n\nfunction App() {\n  const [draw, setDraw] = useState();\n  const [mouseover, setMouseover] = useState();\n  const [params, setParams] = useQueryParams({\n    minX: withDefault(NumberParam, 0),\n    maxX: withDefault(NumberParam, 1),\n    minR: withDefault(NumberParam, 2),\n    maxR: withDefault(NumberParam, 4),\n    opacity: withDefault(StringParam, \"0.1\"),\n    resolution: withDefault(StringParam, \"500\"),\n    animate: withDefault(BooleanParam, true),\n    drawWithWasm: withDefault(BooleanParam, false),\n    vertical: withDefault(BooleanParam, false),\n  });\n  const [mouseDown, setMouseDown] = useState();\n  const [mouseCurr, setMouseCurr] = useState();\n  const [loading, setLoading] = useState(true);\n  const [wasm, setWasm] = useState();\n  const [proportion, setProportion] = useState(0);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const wasm = await import(\"logistic_map_wasm\");\n        setWasm(wasm);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n  const {\n    drawWithWasm,\n    minX,\n    maxX,\n    minR,\n    maxR,\n    opacity,\n    resolution,\n    animate,\n    vertical,\n  } = params;\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      if (wasm && !Number.isNaN(+opacity) && !Number.isNaN(+resolution)) {\n        if (!draw) {\n          return;\n        }\n        const ctx = draw.getContext(\"2d\");\n        if (!ctx) {\n          return;\n        }\n        const { width, height } = draw.getBoundingClientRect();\n        draw.width = width * 2;\n        draw.height = height * 2;\n        ctx.scale(2, 2);\n\n        setLoading(true);\n        setProportion(0);\n        setTimeout(async () => {\n          ctx.fillStyle = \"white\";\n          ctx.fillRect(0, 0, width, height);\n          ctx.fillStyle = `rgba(0,0,0,${+opacity})`;\n          if (drawWithWasm) {\n            wasm.draw(\n              ctx,\n              width,\n              height,\n              minR,\n              maxR,\n              minX,\n              maxX,\n              +resolution,\n              vertical\n            );\n          } else {\n            for (const iter of drawCanvas(\n              ctx,\n              width,\n              height,\n              minR,\n              maxR,\n              minX,\n              maxX,\n              +resolution,\n              vertical\n            )) {\n              if (animate) {\n                setProportion(iter / width);\n                await timeout(1);\n              }\n              if (cancelled) {\n                break;\n              }\n            }\n          }\n\n          //if !cancelled seems to be a race condition?\n          if (!cancelled) {\n            setLoading(false);\n            setProportion(0);\n          }\n        }, 100);\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [\n    minR,\n    maxR,\n    minX,\n    maxX,\n    vertical,\n    animate,\n    drawWithWasm,\n    opacity,\n    resolution,\n    draw,\n    wasm,\n  ]);\n\n  useEffect(() => {\n    if (!mouseover) {\n      return;\n    }\n    const ctx = mouseover.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const { width, height } = mouseover.getBoundingClientRect();\n    mouseover.width = width;\n    mouseover.height = height;\n    if (mouseDown) {\n      ctx.clearRect(0, 0, width, height);\n      const [x1, y1] = mouseDown;\n      const [x2, y2] = mouseCurr;\n      ctx.fillStyle = \"rgba(255,0,0,0.3)\";\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n  }, [mouseDown, mouseCurr, mouseover]);\n\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>\n        <a href=\"https://github.com/cmdcolin/logistic_chaos_map\">\n          f(x)=rx(x-1)\n        </a>\n      </h1>\n      <p>\n        The function above is iterated for values of r between [2,4] and x\n        between [0,1] and points. Click and drag a region to zoom in.\n      </p>\n      <div className=\"controls\">\n        <div className=\"block\">\n          <label htmlFor=\"opacity\">Opacity</label>\n          <input\n            id=\"opacity\"\n            type=\"text\"\n            value={opacity}\n            onChange={(event) => {\n              setParams({ ...params, opacity: event.target.value });\n              forceUpdate();\n            }}\n          />\n        </div>\n        <div className=\"block\">\n          <label htmlFor=\"resolution\">Points to draw at each X</label>\n          <input\n            id=\"resolution\"\n            type=\"text\"\n            value={resolution}\n            onChange={(event) => {\n              setParams({ ...params, resolution: event.target.value });\n              forceUpdate();\n            }}\n          />\n        </div>\n\n        <div className=\"block\">\n          <label htmlFor=\"wasm\">Draw with WASM</label>\n          <input\n            id=\"wasm\"\n            type=\"checkbox\"\n            checked={drawWithWasm}\n            onChange={(event) => {\n              setParams({ ...params, drawWithWasm: event.target.checked });\n              forceUpdate();\n            }}\n          />\n        </div>\n        {!drawWithWasm ? (\n          <div className=\"block\">\n            <label htmlFor=\"vertical\">Vertical</label>\n            <input\n              id=\"vertical\"\n              type=\"checkbox\"\n              checked={vertical}\n              onChange={(event) => {\n                setParams({ ...params, vertical: event.target.checked });\n                forceUpdate();\n              }}\n            />\n          </div>\n        ) : null}\n        {!drawWithWasm ? (\n          <div className=\"block\">\n            <label htmlFor=\"animate\">Animate?</label>\n            <input\n              id=\"animate\"\n              disabled={drawWithWasm}\n              type=\"checkbox\"\n              checked={params.animate}\n              onChange={(event) => {\n                setParams({ ...params, animate: event.target.checked });\n                forceUpdate();\n              }}\n            />\n          </div>\n        ) : null}\n        <p>\n          {loading\n            ? `Loading...${proportion ? proportion.toPrecision(3) : \"\"}`\n            : null}\n        </p>\n        <button\n          onClick={() => {\n            draw.toBlob(function (blob) {\n              saveAs(blob, `logistic_map_${+Date.now()}.png`);\n            });\n          }}\n        >\n          Save as PNG\n        </button>\n\n        <button\n          onClick={() => {\n            setParams({\n              ...params,\n              minX: 0,\n              maxX: 1,\n              minR: 2,\n              maxR: 4,\n            });\n            forceUpdate();\n          }}\n        >\n          Reset\n        </button>\n      </div>\n      <div style={{ position: \"relative\" }}>\n        <canvas\n          ref={(ref) => setDraw(ref)}\n          style={{\n            background: \"white\",\n            width: \"100%\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n          }}\n        />\n        <canvas\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: 1000,\n          }}\n          ref={(ref) => setMouseover(ref)}\n          onMouseDown={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            setMouseDown([x, y]);\n            setMouseCurr([x, y]);\n          }}\n          onMouseMove={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            if (mouseDown) {\n              setMouseCurr([x, y]);\n            }\n          }}\n          onMouseLeave={() => {\n            setMouseDown();\n            setMouseCurr();\n          }}\n          onMouseUp={() => {\n            const x1 = Math.min(mouseDown[0], mouseCurr[0]);\n            const x2 = Math.max(mouseDown[0], mouseCurr[0]);\n            const y1 = Math.min(mouseDown[1], mouseCurr[1]);\n            const y2 = Math.max(mouseDown[1], mouseCurr[1]);\n            const { width, height } = mouseover.getBoundingClientRect();\n\n            const newParams = vertical\n              ? {\n                  minR: ((maxR - minR) * x1) / width + minR,\n                  maxR: ((maxR - minR) * x2) / width + minR,\n                  minX: ((maxX - minX) * y1) / height + minX,\n                  maxX: ((maxX - minX) * y2) / height + minX,\n                }\n              : {\n                  minR: ((maxR - minR) * y1) / height + minR,\n                  maxR: ((maxR - minR) * y2) / height + minR,\n                  minX: ((maxX - minX) * x1) / width + minX,\n                  maxX: ((maxX - minX) * x2) / width + minX,\n                };\n            setParams({\n              ...params,\n\n              minR: ((maxR - minR) * x1) / width + minR,\n              maxR: ((maxR - minR) * x2) / width + minR,\n              minX: ((maxX - minX) * y1) / height + minX,\n              maxX: ((maxX - minX) * y2) / height + minX,\n            });\n            forceUpdate();\n            setMouseDown();\n            setMouseCurr();\n            setLoading(true);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { QueryParamProvider } from \"use-query-params\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}