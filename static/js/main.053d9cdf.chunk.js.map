{"version":3,"sources":["drawCanvas.js","App.js","index.js"],"names":["drawCanvas","ctx","width","height","minR","maxR","minX","maxX","resolution","vertical","rstep","warmup","Math","pow","log","x","r","pointsDrawn","tries","p","random","i","max","xp","y","fillRect","timeout","ms","Promise","resolve","setTimeout","App","useState","draw","setDraw","mouseover","setMouseover","useQueryParams","withDefault","NumberParam","opacity","StringParam","animate","BooleanParam","drawWithWasm","params","setParams","mouseDown","setMouseDown","mouseDownTime","setMouseDownTime","mouseCurr","setMouseCurr","loading","setLoading","wasm","setWasm","proportion","setProportion","forceUpdate","setTick","useCallback","tick","useForceUpdate","useEffect","a","console","error","cancelled","Number","isNaN","getContext","getBoundingClientRect","scale","fillStyle","iter","clearRect","x1","y1","x2","y2","style","margin","href","className","htmlFor","id","type","value","onChange","event","target","checked","disabled","toPrecision","onClick","toBlob","blob","saveAs","Date","now","position","ref","background","left","top","zIndex","onMouseDown","nativeEvent","offsetX","offsetY","onMouseMove","onMouseLeave","onMouseUp","min","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.053d9cdf.chunk.js","sourcesContent":["export default function* drawCanvas(\n  ctx,\n  width,\n  height,\n  minR,\n  maxR,\n  minX,\n  maxX,\n  resolution,\n  vertical\n) {\n  const rstep = (maxR - minR) / width;\n  const warmup = Math.pow(1.5, Math.log(1 / (maxR - minR))) * 1000;\n  for (let x = 0; x < width; x++) {\n    yield x + 1;\n    const r = x * rstep + minR;\n    for (\n      let pointsDrawn = 0, tries = 0;\n      pointsDrawn < resolution && tries < 100;\n      tries++\n    ) {\n      let p = Math.random();\n      for (let i = 0; i < Math.max(warmup, 10000); i++) {\n        p = r * p * (1 - p);\n      }\n\n      if (vertical) {\n        for (let i = 0; i < 500; i++) {\n          const y = width * ((p - minX) / (maxX - minX));\n          const xp = height * ((r - minR) / (maxR - minR));\n          if (y > 0 && y < width) {\n            ctx.fillRect(y, xp, 0.7, 0.7);\n            pointsDrawn++;\n          }\n          p = r * p * (1 - p);\n        }\n      } else {\n        for (let i = 0; i < 500; i++) {\n          const y = height * ((p - minX) / (maxX - minX));\n          const xp = width * ((r - minR) / (maxR - minR));\n          if (y > 0 && y < height) {\n            ctx.fillRect(xp, y, 0.7, 0.7);\n            pointsDrawn++;\n          }\n          p = r * p * (1 - p);\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport \"./App.css\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  BooleanParam,\n  NumberParam,\n  StringParam,\n  useQueryParams,\n  withDefault,\n} from \"use-query-params\";\nimport drawCanvas from \"./drawCanvas\";\nimport saveAs from \"file-saver\";\n\nfunction timeout(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick((tick) => tick + 1);\n  }, []);\n  return update;\n}\n\nfunction App() {\n  const [draw, setDraw] = useState();\n  const [mouseover, setMouseover] = useState();\n  const [params, setParams] = useQueryParams({\n    minX: withDefault(NumberParam, 0),\n    maxX: withDefault(NumberParam, 1),\n    minR: withDefault(NumberParam, 2),\n    maxR: withDefault(NumberParam, 4),\n    opacity: withDefault(StringParam, \"0.1\"),\n    resolution: withDefault(StringParam, \"500\"),\n    animate: withDefault(BooleanParam, true),\n    drawWithWasm: withDefault(BooleanParam, false),\n    vertical: withDefault(BooleanParam, false),\n  });\n  const [mouseDown, setMouseDown] = useState();\n  const [mouseDownTime, setMouseDownTime] = useState();\n  const [mouseCurr, setMouseCurr] = useState();\n  const [loading, setLoading] = useState(true);\n  const [wasm, setWasm] = useState();\n  const [proportion, setProportion] = useState(0);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const wasm = await import(\"logistic_map_wasm\");\n        setWasm(wasm);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n  const {\n    drawWithWasm,\n    minX,\n    maxX,\n    minR,\n    maxR,\n    opacity,\n    resolution,\n    animate,\n    vertical,\n  } = params;\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      if (wasm && !Number.isNaN(+opacity) && !Number.isNaN(+resolution)) {\n        if (!draw) {\n          return;\n        }\n        const ctx = draw.getContext(\"2d\");\n        if (!ctx) {\n          return;\n        }\n        const { width, height } = draw.getBoundingClientRect();\n        draw.width = width * 2;\n        draw.height = height * 2;\n        ctx.scale(2, 2);\n\n        setLoading(true);\n        setProportion(0);\n        setTimeout(async () => {\n          ctx.fillStyle = \"white\";\n          ctx.fillRect(0, 0, width, height);\n          ctx.fillStyle = `rgba(0,0,0,${+opacity})`;\n          if (drawWithWasm) {\n            wasm.draw(\n              ctx,\n              width,\n              height,\n              minR,\n              maxR,\n              minX,\n              maxX,\n              +resolution,\n              vertical\n            );\n          } else {\n            for (const iter of drawCanvas(\n              ctx,\n              width,\n              height,\n              minR,\n              maxR,\n              minX,\n              maxX,\n              +resolution,\n              vertical\n            )) {\n              if (animate) {\n                setProportion(iter / width);\n                await timeout(1);\n              }\n              if (cancelled) {\n                break;\n              }\n            }\n          }\n\n          //if !cancelled seems to be a race condition?\n          if (!cancelled) {\n            setLoading(false);\n            setProportion(0);\n          }\n        }, 100);\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [\n    minR,\n    maxR,\n    minX,\n    maxX,\n    vertical,\n    animate,\n    drawWithWasm,\n    opacity,\n    resolution,\n    draw,\n    wasm,\n  ]);\n\n  useEffect(() => {\n    if (!mouseover) {\n      return;\n    }\n    const ctx = mouseover.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const { width, height } = mouseover.getBoundingClientRect();\n    mouseover.width = width;\n    mouseover.height = height;\n    if (mouseDown) {\n      ctx.clearRect(0, 0, width, height);\n      const [x1, y1] = mouseDown;\n      const [x2, y2] = mouseCurr;\n      ctx.fillStyle = \"rgba(255,0,0,0.3)\";\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n  }, [mouseDown, mouseCurr, mouseover]);\n\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>\n        <a href=\"https://github.com/cmdcolin/logistic_chaos_map\">\n          f(x)=rx(x-1)\n        </a>\n      </h1>\n      <p>\n        The function above is iterated for values of r between [2,4] and x\n        between [0,1] and points. Click and drag a region to zoom in. The\n        program iterates until it draws N points in the zoomed in region, which\n        results in higher computation time at zoomed in values. When zoomed in,\n        it has to iterate the logistic map longer to find that many points to\n        draw resulting in it being slower when zoomed in.\n      </p>\n      <div className=\"controls\">\n        <div className=\"block\">\n          <label htmlFor=\"opacity\">Opacity</label>\n          <input\n            id=\"opacity\"\n            type=\"text\"\n            value={opacity}\n            onChange={(event) => {\n              setParams({ ...params, opacity: event.target.value });\n              forceUpdate();\n            }}\n          />\n        </div>\n        <div className=\"block\">\n          <label htmlFor=\"resolution\">N</label>\n          <input\n            id=\"resolution\"\n            type=\"text\"\n            value={resolution}\n            onChange={(event) => {\n              setParams({ ...params, resolution: event.target.value });\n              forceUpdate();\n            }}\n          />\n        </div>\n\n        <div className=\"block\">\n          <label htmlFor=\"wasm\">Draw with WASM</label>\n          <input\n            id=\"wasm\"\n            type=\"checkbox\"\n            checked={drawWithWasm}\n            onChange={(event) => {\n              setParams({ ...params, drawWithWasm: event.target.checked });\n              forceUpdate();\n            }}\n          />\n        </div>\n        <div className=\"block\">\n          <label htmlFor=\"vertical\">Vertical</label>\n          <input\n            id=\"vertical\"\n            type=\"checkbox\"\n            checked={vertical}\n            onChange={(event) => {\n              setParams({ ...params, vertical: event.target.checked });\n              forceUpdate();\n            }}\n          />\n        </div>\n        {!drawWithWasm ? (\n          <div className=\"block\">\n            <label htmlFor=\"animate\">Animate?</label>\n            <input\n              id=\"animate\"\n              disabled={drawWithWasm}\n              type=\"checkbox\"\n              checked={params.animate}\n              onChange={(event) => {\n                setParams({ ...params, animate: event.target.checked });\n                forceUpdate();\n              }}\n            />\n          </div>\n        ) : null}\n        <p>\n          {loading\n            ? `Loading...${proportion ? (proportion * 100).toPrecision(3) : \"\"}`\n            : null}\n        </p>\n        <button\n          onClick={() => {\n            draw.toBlob(function (blob) {\n              saveAs(blob, `logistic_map_${+Date.now()}.png`);\n            });\n          }}\n        >\n          Save as PNG\n        </button>\n\n        <button\n          onClick={() => {\n            setParams({\n              ...params,\n              minX: 0,\n              maxX: 1,\n              minR: 2,\n              maxR: 4,\n            });\n            forceUpdate();\n          }}\n        >\n          Reset\n        </button>\n      </div>\n      <div style={{ position: \"relative\" }}>\n        <canvas\n          ref={(ref) => setDraw(ref)}\n          style={{\n            background: \"white\",\n            width: \"100%\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n          }}\n        />\n        <canvas\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: 1000,\n          }}\n          ref={(ref) => setMouseover(ref)}\n          onMouseDown={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            setMouseDown([x, y]);\n            setMouseCurr([x, y]);\n          }}\n          onMouseMove={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            if (mouseDown) {\n              setMouseCurr([x, y]);\n            }\n          }}\n          onMouseLeave={() => {\n            setMouseDown();\n            setMouseCurr();\n            setMouseDownTime(+Date.now());\n          }}\n          onMouseUp={() => {\n            if (+Date.now() - mouseDownTime > 200) {\n              const x1 = Math.min(mouseDown[0], mouseCurr[0]);\n              const x2 = Math.max(mouseDown[0], mouseCurr[0]);\n              const y1 = Math.min(mouseDown[1], mouseCurr[1]);\n              const y2 = Math.max(mouseDown[1], mouseCurr[1]);\n              const { width, height } = mouseover.getBoundingClientRect();\n\n              const newParams = vertical\n                ? {\n                    minR: ((maxR - minR) * x1) / width + minR,\n                    maxR: ((maxR - minR) * x2) / width + minR,\n                    minX: ((maxX - minX) * y1) / height + minX,\n                    maxX: ((maxX - minX) * y2) / height + minX,\n                  }\n                : {\n                    minR: ((maxR - minR) * y1) / height + minR,\n                    maxR: ((maxR - minR) * y2) / height + minR,\n                    minX: ((maxX - minX) * x1) / width + minX,\n                    maxX: ((maxX - minX) * x2) / width + minX,\n                  };\n              setParams({\n                ...params,\n\n                minR: ((maxR - minR) * x1) / width + minR,\n                maxR: ((maxR - minR) * x2) / width + minR,\n                minX: ((maxX - minX) * y1) / height + minX,\n                maxX: ((maxX - minX) * y2) / height + minX,\n              });\n              forceUpdate();\n              setMouseDown();\n              setMouseCurr();\n            } else {\n              setMouseDownTime();\n              setMouseDown();\n              setMouseCurr();\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { QueryParamProvider } from \"use-query-params\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}