{"version":3,"sources":["App.js","drawCanvas.js","index.js"],"names":["initial","minX","maxX","minR","maxR","App","useState","draw","setDraw","mouseover","setMouseover","useQueryParams","withDefault","NumberParam","params","setParams","mouseDown","setMouseDown","mouseCurr","setMouseCurr","loading","setLoading","counter","setCounter","useWasm","setUseWasm","wasm","setWasm","time","setTime","useEffect","a","ctx","getContext","getBoundingClientRect","width","height","requestIdleCallback","fillStyle","now","performance","rstep","x","r","p","Math","random","i","y","xp","fillRect","drawCanvas","clearRect","font","textAlign","textBaseline","fillText","x1","y1","x2","y2","style","margin","href","htmlFor","id","type","checked","onChange","event","target","onClick","position","ref","background","left","top","zIndex","onMouseDown","nativeEvent","offsetX","offsetY","onMouseMove","onMouseLeave","onMouseUp","min","max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8dd8ec2.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useEffect, useState } from \"react\";\nimport { NumberParam, useQueryParams, withDefault } from \"use-query-params\";\nimport drawCanvas from \"./drawCanvas\";\n\nconst initial = {\n  minX: 0,\n  maxX: 1,\n  minR: 2,\n  maxR: 4,\n};\n\nfunction App() {\n  const [draw, setDraw] = useState();\n  const [mouseover, setMouseover] = useState();\n  const [params, setParams] = useQueryParams({\n    minX: withDefault(NumberParam, 0),\n    maxX: withDefault(NumberParam, 1),\n    minR: withDefault(NumberParam, 2),\n    maxR: withDefault(NumberParam, 4),\n  });\n  const [mouseDown, setMouseDown] = useState();\n  const [mouseCurr, setMouseCurr] = useState();\n  const [loading, setLoading] = useState(true);\n  const [counter, setCounter] = useState();\n  const [useWasm, setUseWasm] = useState(false);\n  const [wasm, setWasm] = useState();\n  const [time, setTime] = useState();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const wasm = await import(\"logistic_map_wasm\");\n        setWasm(wasm);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const { minX, maxX, minR, maxR } = params;\n    if (!draw) {\n      return;\n    }\n    const ctx = draw.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const { width, height } = draw.getBoundingClientRect();\n    draw.width = width;\n    draw.height = height;\n\n    setLoading(true);\n    requestIdleCallback(() => {\n      ctx.fillStyle = \"rgba(0,0,0,0.4)\";\n      if (useWasm) {\n        const now = performance.now();\n        wasm.draw(ctx, width, height, minR, maxR, minX, maxX);\n        setTime(performance.now() - now);\n      } else {\n        const now = performance.now();\n        drawCanvas(ctx, width, height, minR, maxR, minX, maxX);\n        setTime(performance.now() - now);\n      }\n      setLoading(false);\n    });\n  }, [params, draw, wasm, useWasm]);\n\n  useEffect(() => {\n    if (!mouseover) {\n      return;\n    }\n    const ctx = mouseover.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const { width, height } = mouseover.getBoundingClientRect();\n    mouseover.width = width;\n    mouseover.height = height;\n    if (loading) {\n      ctx.clearRect(0, 0, width, height);\n      ctx.font = \"100px Verdana\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(\"Loading...\", width / 2, height / 2);\n    }\n    if (mouseDown) {\n      ctx.clearRect(0, 0, width, height);\n      const [x1, y1] = mouseDown;\n      const [x2, y2] = mouseCurr;\n      ctx.fillStyle = \"rgba(255,0,0,0.3)\";\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n  }, [mouseDown, mouseCurr, mouseover, loading]);\n  const { minR, maxR, minX, maxX } = params;\n\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>\n        <a href=\"https://github.com/cmdcolin/logistic_chaos_map\">\n          f(x)=rx(x-1)\n        </a>\n      </h1>\n      <p>\n        The function above is iterated for values of r between [2,4] and x\n        between [0,1] and points where it lands after 1000 initial warm up\n        iterations are plotted. Click and drag a region to zoom in.\n      </p>\n      <label htmlFor=\"wasm\">Draw with WASM</label>\n      <input\n        id=\"wasm\"\n        type=\"checkbox\"\n        checked={useWasm}\n        onChange={(event) => setUseWasm(event.target.checked)}\n      />\n      <p>\n        Current params: r=[{minR},{maxR}] x=[{minX},{maxX}]\n        {time ? ` Time taken: ${time}ms` : null}\n      </p>\n      <button\n        onClick={() => {\n          setParams(initial);\n          setCounter(counter + 1);\n          setLoading(true);\n        }}\n      >\n        Reset\n      </button>\n      <div style={{ position: \"relative\" }}>\n        <canvas\n          ref={(ref) => setDraw(ref)}\n          style={{\n            background: \"white\",\n            width: \"100%\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n          }}\n        />\n        <canvas\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: 100,\n          }}\n          ref={(ref) => setMouseover(ref)}\n          onMouseDown={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            setMouseDown([x, y]);\n            setMouseCurr([x, y]);\n          }}\n          onMouseMove={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            if (mouseDown) {\n              setMouseCurr([x, y]);\n            }\n          }}\n          onMouseLeave={() => {\n            setMouseDown();\n            setMouseCurr();\n          }}\n          onMouseUp={() => {\n            const x1 = Math.min(mouseDown[0], mouseCurr[0]);\n            const x2 = Math.max(mouseDown[0], mouseCurr[0]);\n            const y1 = Math.min(mouseDown[1], mouseCurr[1]);\n            const y2 = Math.max(mouseDown[1], mouseCurr[1]);\n            const { maxR, minR, maxX, minX } = params;\n            const { width, height } = mouseover.getBoundingClientRect();\n\n            setParams({\n              minR: ((maxR - minR) * x1) / width + minR,\n              maxR: ((maxR - minR) * x2) / width + minR,\n              minX: ((maxX - minX) * y1) / height + minX,\n              maxX: ((maxX - minX) * y2) / height + minX,\n            });\n            setCounter(counter + 1);\n            setMouseDown();\n            setMouseCurr();\n            setLoading(true);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default function drawCanvas(ctx, width, height, minR, maxR, minX, maxX) {\n  const rstep = (maxR - minR) / width;\n  for (let x = 0; x < width; x++) {\n    const r = x * rstep + minR;\n    let p = Math.random();\n    for (let i = 0; i < 1000; i++) {\n      p = r * p * (1 - p);\n    }\n    for (let i = 0; i < 200; i++) {\n      const y = height * ((p - minX) / (maxX - minX));\n      const xp = width * ((r - minR) / (maxR - minR));\n      if (y > 0 && y < height) {\n        ctx.fillRect(xp, y, 0.7, 0.7);\n      }\n      p = r * p * (1 - p);\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { QueryParamProvider } from \"use-query-params\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}