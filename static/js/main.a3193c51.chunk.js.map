{"version":3,"sources":["App.js","index.js"],"names":["App","useState","draw","setDraw","mouseover","setMouseover","minX","maxX","minR","maxR","params","setParams","mouseDown","setMouseDown","mouseCurr","setMouseCurr","loading","setLoading","useEffect","ctx","getContext","getBoundingClientRect","width","height","requestIdleCallback","fillStyle","rstep","xstep","r","p","x","i","fillRect","drawCanvas","clearRect","font","textAlign","textBaseline","fillText","x1","y1","x2","y2","style","margin","onClick","position","ref","background","left","top","zIndex","onMouseDown","event","nativeEvent","offsetX","y","offsetY","onMouseMove","onMouseUp","Math","min","max","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3193c51.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useEffect, useState } from \"react\";\nfunction App() {\n  const [draw, setDraw] = useState();\n  const [mouseover, setMouseover] = useState();\n  const [params, setParams] = useState({ minX: 0, maxX: 1, minR: 2, maxR: 4 });\n  const [mouseDown, setMouseDown] = useState();\n  const [mouseCurr, setMouseCurr] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const { minX, maxX, minR, maxR } = params;\n    if (!draw) return;\n    const ctx = draw.getContext(\"2d\");\n    if (!ctx) return;\n    const { width, height } = draw.getBoundingClientRect();\n    draw.width = width;\n    draw.height = height;\n    function drawCanvas() {\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n      const rstep = (maxR - minR) / width;\n      const xstep = (maxX - minX) / height;\n      for (let r = minR; r < maxR; r += rstep) {\n        for (let p = minX; p < maxX; p += xstep * 10) {\n          let x = p;\n          for (let i = 0; i < 100; i++) {\n            x = r * x * (1 - x);\n          }\n          for (let i = 0; i < 10; i++) {\n            ctx.fillRect(\n              width * ((r - minR) / (maxR - minR)),\n              x * height,\n              0.5,\n              0.5\n            );\n            x = r * x * (1 - x);\n          }\n        }\n      }\n    }\n\n    requestIdleCallback(() => {\n      drawCanvas();\n      setLoading(false);\n    });\n  }, [params, draw]);\n\n  useEffect(() => {\n    if (!mouseover) return;\n    const ctx = mouseover.getContext(\"2d\");\n    if (!ctx) return;\n    const { width, height } = mouseover.getBoundingClientRect();\n    mouseover.width = width;\n    mouseover.height = height;\n    if (loading) {\n      ctx.clearRect(0, 0, width, height);\n      ctx.font = \"100px Verdana\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(\"Loading...\", width / 2, height / 2);\n    }\n    if (mouseDown) {\n      ctx.clearRect(0, 0, width, height);\n      const [x1, y1] = mouseDown;\n      const [x2, y2] = mouseCurr;\n      ctx.fillStyle = \"rgba(255,0,0,0.3)\";\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n  }, [mouseDown, mouseCurr, mouseover, loading]);\n  const { minR, maxR, minX, maxX } = params;\n\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>f(x)=rx(x-1)</h1>\n      <p>\n        The function above is iterated for values of r between [2,4] and x\n        between [0,1] and points where it lands after 100 initial warm up\n        iterations are plotted\n      </p>\n      <p>\n        Current params: r=[{minR},{maxR}] x=[{minX},{maxX}]\n      </p>\n      <button onClick={() => setParams({ minR: 2, maxR: 4, minX: 0, maxX: 1 })}>\n        Reset\n      </button>\n      <div style={{ position: \"relative\" }}>\n        <canvas\n          ref={(ref) => setDraw(ref)}\n          style={{\n            background: \"white\",\n            width: \"100%\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n          }}\n        />\n        <canvas\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: 100,\n          }}\n          ref={(ref) => setMouseover(ref)}\n          onMouseDown={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            setMouseDown([x, y]);\n            setMouseCurr([x, y]);\n          }}\n          onMouseMove={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            if (mouseDown) {\n              setMouseCurr([x, y]);\n            }\n          }}\n          onMouseUp={() => {\n            const x1 = Math.min(mouseDown[0], mouseCurr[0]);\n            const x2 = Math.max(mouseDown[0], mouseCurr[0]);\n            const y1 = Math.min(mouseDown[1], mouseCurr[1]);\n            const y2 = Math.max(mouseDown[1], mouseCurr[1]);\n            const { maxR, minR, maxX, minX } = params;\n            const { width, height } = mouseover.getBoundingClientRect();\n\n            setParams({\n              minR: ((maxR - minR) * x1) / width + minR,\n              maxR: ((maxR - minR) * x2) / width + minR,\n              minX: ((maxX - minX) * y1) / height + minX,\n              maxX: ((maxX - minX) * y2) / height + maxX,\n            });\n            setMouseDown(undefined);\n            setMouseCurr(undefined);\n            setLoading(true);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}