{"version":3,"sources":["App.js","index.js"],"names":["initial","minX","maxX","minR","maxR","App","useState","draw","setDraw","mouseover","setMouseover","useQueryParams","withDefault","NumberParam","params","setParams","mouseDown","setMouseDown","mouseCurr","setMouseCurr","loading","setLoading","counter","setCounter","useEffect","ctx","getContext","getBoundingClientRect","width","height","requestIdleCallback","fillStyle","fillRect","rstep","xstep","r","p","x","i","y","drawCanvas","clearRect","font","textAlign","textBaseline","fillText","x1","y1","x2","y2","style","margin","onClick","position","ref","background","left","top","zIndex","onMouseDown","event","nativeEvent","offsetX","offsetY","onMouseMove","onMouseLeave","onMouseUp","Math","min","max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3711961d.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { useEffect, useState } from \"react\";\nimport { NumberParam, useQueryParams, withDefault } from \"use-query-params\";\n\nconst initial = {\n  minX: 0,\n  maxX: 1,\n  minR: 2,\n  maxR: 4,\n};\nfunction App() {\n  const [draw, setDraw] = useState();\n  const [mouseover, setMouseover] = useState();\n  const [params, setParams] = useQueryParams({\n    minX: withDefault(NumberParam, 0),\n    maxX: withDefault(NumberParam, 1),\n    minR: withDefault(NumberParam, 2),\n    maxR: withDefault(NumberParam, 4),\n  });\n  const [mouseDown, setMouseDown] = useState();\n  const [mouseCurr, setMouseCurr] = useState();\n  const [loading, setLoading] = useState(true);\n  const [counter, setCounter] = useState();\n\n  useEffect(() => {\n    const { minX, maxX, minR, maxR } = params;\n    if (!draw) return;\n    const ctx = draw.getContext(\"2d\");\n    if (!ctx) return;\n    const { width, height } = draw.getBoundingClientRect();\n    draw.width = width;\n    draw.height = height;\n    function drawCanvas() {\n      ctx.fillStyle = \"white\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.fillStyle = `rgba(0,0,0,0.3)`;\n      const rstep = (maxR - minR) / width;\n      const xstep = (maxX - minX) / height;\n      for (let r = minR; r < maxR; r += rstep) {\n        for (let p = minX; p < maxX; p += xstep * 10) {\n          let x = p;\n          for (let i = 0; i < 1000; i++) {\n            x = r * x * (1 - x);\n          }\n          for (let i = 0; i < 20; i++) {\n            const y = height * ((x - minX) / (maxX - minX));\n            if (y > 0 && y < height) {\n              ctx.fillRect(width * ((r - minR) / (maxR - minR)), y, 0.7, 0.7);\n            }\n            x = r * x * (1 - x);\n          }\n        }\n      }\n    }\n\n    requestIdleCallback(() => {\n      drawCanvas();\n      setLoading(false);\n    });\n  }, [params, draw]);\n\n  useEffect(() => {\n    if (!mouseover) return;\n    const ctx = mouseover.getContext(\"2d\");\n    if (!ctx) return;\n    const { width, height } = mouseover.getBoundingClientRect();\n    mouseover.width = width;\n    mouseover.height = height;\n    if (loading) {\n      ctx.clearRect(0, 0, width, height);\n      ctx.font = \"100px Verdana\";\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(\"Loading...\", width / 2, height / 2);\n    }\n    if (mouseDown) {\n      ctx.clearRect(0, 0, width, height);\n      const [x1, y1] = mouseDown;\n      const [x2, y2] = mouseCurr;\n      ctx.fillStyle = \"rgba(255,0,0,0.3)\";\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n  }, [mouseDown, mouseCurr, mouseover, loading]);\n  const { minR, maxR, minX, maxX } = params;\n\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>f(x)=rx(x-1)</h1>\n      <p>\n        The function above is iterated for values of r between [2,4] and x\n        between [0,1] and points where it lands after 100 initial warm up\n        iterations are plotted\n      </p>\n      <p>\n        Current params: r=[{minR},{maxR}] x=[{minX},{maxX}]\n      </p>\n      <button\n        onClick={() => {\n          setParams(initial);\n          setCounter(counter + 1);\n          setLoading(true);\n        }}\n      >\n        Reset\n      </button>\n      <div style={{ position: \"relative\" }}>\n        <canvas\n          ref={(ref) => setDraw(ref)}\n          style={{\n            background: \"white\",\n            width: \"100%\",\n            height: \"100vh\",\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n          }}\n        />\n        <canvas\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: 100,\n          }}\n          ref={(ref) => setMouseover(ref)}\n          onMouseDown={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            setMouseDown([x, y]);\n            setMouseCurr([x, y]);\n          }}\n          onMouseMove={(event) => {\n            const { offsetX: x, offsetY: y } = event.nativeEvent;\n            if (mouseDown) {\n              setMouseCurr([x, y]);\n            }\n          }}\n          onMouseLeave={() => {\n            setMouseDown();\n            setMouseCurr();\n          }}\n          onMouseUp={() => {\n            const x1 = Math.min(mouseDown[0], mouseCurr[0]);\n            const x2 = Math.max(mouseDown[0], mouseCurr[0]);\n            const y1 = Math.min(mouseDown[1], mouseCurr[1]);\n            const y2 = Math.max(mouseDown[1], mouseCurr[1]);\n            const { maxR, minR, maxX, minX } = params;\n            const { width, height } = mouseover.getBoundingClientRect();\n\n            setParams({\n              minR: ((maxR - minR) * x1) / width + minR,\n              maxR: ((maxR - minR) * x2) / width + minR,\n              minX: ((maxX - minX) * y1) / height + minX,\n              maxX: ((maxX - minX) * y2) / height + minX,\n            });\n            setCounter(counter + 1);\n            setMouseDown();\n            setMouseCurr();\n            setLoading(true);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { QueryParamProvider } from \"use-query-params\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}